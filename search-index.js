var N=null,E="",T="t",U="u",searchIndex={};
var R=["subreddit","basicthing","rouxerror","result","listing","reddit","try_into","roux::subreddit","try_from","borrow_mut","roux::user","type_id","Subreddit"];

searchIndex["roux"]={"doc":"roux.rs This crate simple access to he Reddit API ## Using…","i":[[3,"Reddit","roux","Client to use OAuth with Reddit.",N,N],[0,R[0],E,"Read only subreddit. A read-only `Subreddit` class. #…",N,N],[3,R[12],R[7],"Subreddit.",N,N],[12,"name",E,"Name of subreddit.",0,N],[11,"new",E,"Create a new `Subreddit` instance.",0,[[["str"]],[R[0]]]],[11,"moderators",E,"Get moderators.",0,[[["self"]],[[R[1],[R[4]]],[R[3],[R[1],R[2]]],[R[2]]]]],[11,"hot",E,"Get hot posts.",0,[[["self"],["u32"]],[[R[3],[R[1],R[2]]],[R[2]],[R[1],[R[4]]]]]],[11,"rising",E,"Get rising posts.",0,[[["self"],["u32"]],[[R[3],[R[1],R[2]]],[R[2]],[R[1],[R[4]]]]]],[11,"top",E,"Get top posts.",0,[[["self"],["u32"]],[[R[3],[R[1],R[2]]],[R[2]],[R[1],[R[4]]]]]],[0,"user","roux","Read only user. A read-only `User` class. # Usage…",N,N],[3,"User",R[10],"User.",N,N],[12,"user",E,"User's name.",1,N],[11,"new",E,"Create a new `User` instance.",1,[[["str"]],["user"]]],[11,"overview",E,"Get user's overview.",1,[[["self"]],[[R[1],[R[4]]],[R[3],[R[1],R[2]]],[R[2]]]]],[11,"submitted",E,"Get user's submitted posts.",1,[[["self"]],[[R[2]],[R[1],[R[4]]],[R[3],[R[1],R[2]]]]]],[11,"comments",E,"Get user's submitted comments.",1,[[["self"]],[[R[3],[R[1],R[2]]],[R[1],[R[4]]],[R[2]]]]],[11,"new","roux","Creates a `Reddit` instance with user_agent, client_id,…",2,[[["str"]],[R[5]]]],[11,"username",E,"Sets username.",2,[[["str"]],[R[5]]]],[11,"password",E,"Sets password.",2,[[["str"]],[R[5]]]],[11,"login",E,"Login as a user.",2,[[],[["me"],[R[3],["me",R[2]]],[R[2]]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[6],E,E,2,[[],[R[3]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],["typeid"]]],[11,R[6],E,E,2,[[],[R[3]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"from",R[7],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[6],E,E,0,[[],[R[3]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],["typeid"]]],[11,R[6],E,E,0,[[],[R[3]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"from",R[10],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[6],E,E,1,[[],[R[3]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],["typeid"]]],[11,R[6],E,E,1,[[],[R[3]]]],[11,"vzip",E,E,1,[[],["v"]]]],"p":[[3,R[12]],[3,"User"],[3,"Reddit"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);